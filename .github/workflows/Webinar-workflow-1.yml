# This is a basic workflow to help you get started with Actions
 
name: Webinar-workflow-1

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # Auth
  FLYWAY_EMAIL: "${{ secrets.FLYWAY_EMAIL }}" # Enter the email address linked to the Redgate Account that created the PAT
  FLYWAY_TOKEN: "${{ secrets.FLYWAY_TOKEN }}" # Enter the PAT Value (This should be treated like a password and thus as a secure variable.
  
  # Project settings
  BASELINE_VERSION: "001" # This should match the version number of your baseline script
  FIRST_UNDO_SCRIPT: "002" # This should match the first undo version in your project

jobs:
  Deploy:
    name: Deploy Prod
    # The type of runner that the job will run on
    runs-on: "self-hosted" # Options - self-hosted/ubuntu-latest/windows-latest (See here for more details on GitHub hosted runners - https://docs.github.com/en/actions/using-github-hosted-runners/using-github-hosted-runners/about-github-hosted-runners)
    environment: 'Prod'
    env:
      stage: 'Deploy'
      displayName: 'Deploy'
      DATABASE_NAME: 'AutoPilotProd'
      ENVIRONMENT: 'Prod' # This variable refers to the environment name present in the Flyway Projects TOML file. 
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      # Step 1 - Flyway License Authentication #
      - name: Flyway Authentication
        run: 
         flyway auth -IAgreeToTheEula -email="${{ env.FLYWAY_EMAIL }}" -token="${{ env.FLYWAY_TOKEN }}"
      # Step 2 - Migrate all scripts from the migration folder, to verify they can be deployed against an empty database. This is the quickest way to get feedback about problematic scripts
      - name: Migrate Prod DB
        run: 
          flyway info migrate info -environment="${{ env.ENVIRONMENT }}" -configFiles="${{ GITHUB.WORKSPACE }}\flyway.toml" -locations="filesystem:${{ GITHUB.WORKSPACE }}\migrations" -cleanDisabled='false' -baselineOnMigrate="true" 
