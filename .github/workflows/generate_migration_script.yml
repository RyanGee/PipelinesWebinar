name: Flyway-Simple-Migration-GitHub

on:
  pull_request:
    branches:
      - Nmain

jobs:
  build:
    runs-on: self-hosted

    env:
      WORKING_DIRECTORY: ${{ github.workspace }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Check Latest Git Commit
        run: |
          git fetch origin
          $latestCommitMessage = git log -1 --pretty=%B
          echo "Latest Commit Message: $latestCommitMessage"
          if ($latestCommitMessage -match '\[skip ci\]') {
            echo "Skipping CI"
            exit 0
          }
        shell: pwsh

      - name: Get PR Title for Migration Script
        if: github.event_name == 'pull_request'
        run: |
          $pr_title = "${{ github.event.pull_request.title }}"
          $sanitizedTitle = $pr_title -replace '[^a-zA-Z0-9]', ''
          echo "Sanitized PR Title: $sanitizedTitle"
          echo "FLYWAY_VERSION_DESCRIPTION_SANITIZED=$sanitizedTitle" >> $GITHUB_ENV
        shell: pwsh

      - name: Flyway CLI - Create Diff Artifact
        run: |
          flyway diff `
          "-diff.source=SchemaModel" `
          "-diff.target=migrations" `
          "-diff.buildEnvironment=shadow" `
          "-diff.artifactFilename=${{ env.WORKING_DIRECTORY }}\Flyway.Diff.zip" `
          -licenseKey="${{ secrets.FLYWAY_LICENSE_KEY }}"
        shell: pwsh

      - name: Generate Migration Script
        run: |
          flyway generate `
          "-generate.description=${{ env.FLYWAY_VERSION_DESCRIPTION_SANITIZED }}" `
          "-generate.location=${{ env.WORKING_DIRECTORY }}\migrations" `
          "-generate.types=versioned,undo" `
          "-generate.artifactFilename=${{ env.WORKING_DIRECTORY }}\Flyway.Diff.zip" `
          -licenseKey="${{ secrets.FLYWAY_LICENSE_KEY }}"
        shell: pwsh

      - name: Commit and Push Changes
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        shell: pwsh
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"

          # Extract correct branch name from GitHub Actions variable
          $branchRef = "${{ github.ref }}"
          if ($branchRef -match "refs/heads/(.*)") {
              $branchName = $matches[1]
          } elseif ($branchRef -match "refs/pull/(.*)/merge") {
              # If it's a PR build, use the PR source branch instead
              $branchName = "${{ github.event.pull_request.head.ref }}"
          } else {
              Write-Host "Could not determine branch name. Exiting."
              exit 1
          }

          Write-Host "Current Branch: $branchName"

          git checkout $branchName

          # Set remote with PAT for authentication
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}.git

          git add .
          git commit -m "Flyway Dev - Auto Generated Migration Scripts [skip ci]" || Write-Host "No changes to commit"
          git push origin $branchName
